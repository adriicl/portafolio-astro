---
const projects = [
  { 
    title: "TrueKapp", 
    description: "Una plataforma web donde los usuarios pueden subir objetos que quieren intercambiar y buscar objetos de su interés. En lugar de usar dinero, los usuarios ofrecen sus propios objetos a cambio. Ademas de un sistema de mensajeria entre los usuarios.", 
    link: "https://youtu.be/2EwuiPOeQC8", 
    image: "img/truekapp.png",
    technologies: ["Laravel", "PHP", "MySQL", 'JavaScript','Tailwind CSS','Laravel Blade', 'API Rest'],
    category: "Full-Stack",
    featured: true
  },
  { 
    title: "API Valorant", 
    description: "Este sitio web es un proyecto interactivo de Valorant, construido usando JavaScript, HTML, Tailwind CSS y utilizando una API publica. Permite a los usuarios explorar agentes, sus habilidades, mapas de juego y diversos armas junto con sus skins.", 
    link: "https://adriicl.github.io/Valorant/", 
    image: "img/valorant.webp",
    technologies: ["JavaScript", "HTML", "Tailwind CSS"],
    category: "Frontend"
  },
  { 
    title: "Marvel App", 
    description: "Un diseño de interfaz de usuario interactivo construido con Tailwind CSS y Framer Motion, mostrando contenido de Marvel con animaciones suaves y principios de diseño modernos.", 
    link: "/projects/project-two", 
    image: "img/marvel.jpg",
    technologies: ["Tailwind CSS", "Framer Motion", "React"],
    category: "UI/UX"
  },
  { 
    title: "E-commerce Platform", 
    description: "Una plataforma de comercio electrónico full-stack impulsada por Laravel y Vue.js, con autenticación de usuario, gestión de productos y procesamiento de pagos.", 
    link: "/projects/project-three", 
    image: "img/futbol.webp",
    technologies: ["Laravel", "Vue.js", "PHP", "MySQL"],
    category: "Full-Stack"
  }
];

const getCategoryColor = (category: string) => {
  switch(category) {
    case "Frontend": return "bg-blue-500/20 text-blue-400 border-blue-400/30";
    case "UI/UX": return "bg-purple-500/20 text-purple-400 border-purple-400/30";
    case "Full-Stack": return "bg-green-500/20 text-green-400 border-green-400/30";
    default: return "bg-gray-500/20 text-gray-400 border-gray-400/30";
  }
};
---

<section id="projects" class="w-full text-white py-20 px-6 scroll-mt-24 md:scroll-mt-28">
  <div class="max-w-6xl mx-auto">
    
    <!-- Header con título y línea decorativa -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-green-400 mb-4">Mis Proyectos</h2>
      <div class="w-24 h-1 bg-gradient-to-r from-green-400 to-blue-500 mx-auto rounded-full mb-6"></div>
    </div>

    <!-- Proyecto destacado -->
    {projects.filter(p => p.featured).map(project => (
      <div class="mb-16">
        <div class="text-center mb-8">
          <h3 class="text-2xl font-bold text-white mb-2">Proyecto Destacado</h3>
          <div class="w-16 h-1 bg-gradient-to-r from-blue-400 to-purple-500 mx-auto rounded-full"></div>
        </div>

        <!-- Card móvil (layout vertical) -->
        <a href={project.link} class="group block md:hidden" target="_blank">
          <div class="overflow-hidden rounded-2xl shadow-2xl border border-gray-700/50 bg-[#0a0a0a]">
            <img
              src={project.image}
              alt={project.title}
              class="w-full h-48 object-cover"
            />
            <div class="p-5">
              <div class={`inline-block px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(project.category)} mb-3`}>
                {project.category}
              </div>
              <h3 class="text-2xl font-bold text-white mb-3">
                {project.title}
              </h3>
              <p class="text-sm text-gray-200 mb-4 leading-relaxed">
                {project.description}
              </p>
              <div class="flex flex-wrap gap-2 mb-4">
                {project.technologies.slice(0, 4).map(tech => (
                  <span class="px-2 py-1 bg-gray-800/50 text-gray-300 text-xs rounded border border-gray-700/50">
                    {tech}
                  </span>
                ))}
              </div>
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2 text-green-400 font-semibold">
                  <span>Ver Proyecto</span>
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </a>

        <!-- Card escritorio/tablet (layout con overlay) -->
        <a href={project.link} class="group hidden md:block" target="_blank">
          <div class="relative overflow-hidden rounded-2xl shadow-2xl border border-gray-700/50 hover:border-green-400/50 transition-all duration-500">
            <div class="relative h-[500px] lg:h-[600px] overflow-hidden">
              <img
                src={project.image}
                alt={project.title}
                class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
            </div>
            <div class="absolute bottom-0 left-0 right-0 p-8">
              <div class={`inline-block px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(project.category)} mb-4`}>
                {project.category}
              </div>
              <h3 class="text-3xl lg:text-4xl font-bold text-white mb-4 group-hover:text-green-400 transition-colors duration-300">
                {project.title}
              </h3>
              <p class="text-lg text-gray-100 mb-6 max-w-3xl leading-relaxed">
                {project.description}
              </p>
              <div class="flex flex-wrap gap-2 mb-6">
                {project.technologies.map(tech => (
                  <span class="px-3 py-1 bg-gray-800/50 text-gray-300 text-sm rounded-lg border border-gray-700/50">
                    {tech}
                  </span>
                ))}
              </div>
              <div class="flex items-center space-x-2 text-green-400 font-semibold group-hover:text-white transition-colors duration-300">
                <span>Ver Proyecto</span>
                <svg class="w-5 h-5 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </div>
            </div>
          </div>
        </a>
      </div>
    ))}

    <!-- Otros proyectos -->
    <div class="mb-16">
      <div class="text-center mb-8">
        <h3 class="text-2xl font-bold text-white mb-2">Otros Proyectos</h3>
        <div class="w-16 h-1 bg-gradient-to-r from-purple-400 to-pink-500 mx-auto rounded-full"></div>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {projects.filter(p => !p.featured).map(project => (
          <>
            <!-- Card móvil (layout vertical) -->
            <a href={project.link} class="group block md:hidden" target="_blank">
              <div class="overflow-hidden rounded-xl shadow-lg border border-gray-700/50 bg-[#0a0a0a]">
                <img
                  src={project.image}
                  alt={project.title}
                  class="w-full h-40 object-cover"
                />
                <div class="p-5">
                  <div class={`inline-block px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(project.category)} mb-2`}>
                    {project.category}
                  </div>
                  <h3 class="text-xl font-bold text-white mb-2">
                    {project.title}
                  </h3>
                  <p class="text-gray-200 mb-3 text-sm leading-relaxed">
                    {project.description}
                  </p>
                  <div class="flex flex-wrap gap-2 mb-3">
                    {project.technologies.slice(0, 3).map(tech => (
                      <span class="px-2 py-1 bg-gray-800/50 text-gray-300 text-xs rounded border border-gray-700/50">
                        {tech}
                      </span>
                    ))}
                  </div>
                  <div class="flex items-center space-x-2 text-green-400 font-semibold text-sm">
                    <span>Ver Proyecto</span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                    </svg>
                  </div>
                </div>
              </div>
            </a>

            <!-- Card escritorio/tablet (layout con overlay) -->
            <a href={project.link} class="group hidden md:block" target="_blank">
              <div class="relative overflow-hidden rounded-xl shadow-lg border border-gray-700/50 hover:border-green-400/50 transition-all duration-500 h-[350px]">
                <div class="relative h-full overflow-hidden">
                  <img
                    src={project.image}
                    alt={project.title}
                    class="w-full h-full object-cover transition-all duration-700 group-hover:scale-110"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
                </div>
                <div class="absolute bottom-0 left-0 right-0 p-6">
                  <div class={`inline-block px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(project.category)} mb-3`}>
                    {project.category}
                  </div>
                  <h3 class="text-2xl font-bold text-white mb-3 group-hover:text-green-400 transition-colors duration-300">
                    {project.title}
                  </h3>
                  <p class="text-gray-100 mb-4 text-sm leading-relaxed">
                    {project.description}
                  </p>
                  <div class="flex flex-wrap gap-2 mb-4">
                    {project.technologies.slice(0, 3).map(tech => (
                      <span class="px-2 py-1 bg-gray-800/50 text-gray-300 text-xs rounded border border-gray-700/50">
                        {tech}
                      </span>
                    ))}
                  </div>
                  <div class="flex items-center space-x-2 text-green-400 font-semibold text-sm group-hover:text-white transition-colors duration-300">
                    <span>Ver Proyecto</span>
                    <svg class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                    </svg>
                  </div>
                </div>
              </div>
            </a>
          </>
        ))}
      </div>
    </div>

  </div>
</section>
